/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

// define 
#define DEFAULT 0
#define SYM 1
#define NAV 2
#define SPECIAL 3
#define CONFIG 4
#define KEYS_L 0 1 2 3 4  5  12 13 14 15 16 17 24 25 26 27 28 29
#define KEYS_R 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35
#define THUMBS 36 37 38 39 40 41 

/ {
    behaviors {
        asl: alpha_shift_l {
            compatible = "zmk,behavior-hold-tap";
            label = "ALPHA_SFT_L";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
        };
        asr: alpha_shift_r {
            compatible = "zmk,behavior-hold-tap";
            label = "ALPHA_SFT_R";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
        };
    };
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
    &kp TAB       &kp Q        &kp W &kp E &kp R &kp T    &kp Y &kp U  &kp I     &kp O   &kp P           &kp BSPC 
    &mt LCTRL ESC &kp A        &kp S &kp D &kp F &kp G    &kp H &kp J  &kp K     &kp L   &kp SEMI        &kp SQT
    &kp LALT      &asl LSHFT Z &kp X &kp C &kp V &kp B    &kp N &kp M  &kp COMMA &kp DOT &asr RSHFT FSLH &kp RALT
                  &kp LGUI &lt SYM SPACE &lt NAV SPACE    &lt NAV RET &lt SYM RET &kp RGUI
            >;
        };
        symbol_layer {
            bindings = <
   &trans &kp N1          &kp N2    &kp N3   &kp N4      &kp N5    &kp N6    &kp N7    &kp N8          &kp N9    &kp N0          &kp BSPC
   &trans &kp UNDER       &kp PLUS  &kp PIPE &kp LBRC    &kp RBRC  &kp BSLH  &kp MINUS &kp EQUAL       &kp LBKT  &kp RBKT        &kp GRAVE
   &trans &asl LSHFT EXCL &kp AT    &kp HASH &kp DLLR    &kp PRCNT &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR  &asr RSHFT RPAR &trans
                        &trans   &mo SPECIAL &kp CAPS    &trans    &mo SPECIAL &kp TILDE
            >;
        };
        nav_layer {
            bindings = <
   &trans     &kp F1       &kp F2       &kp F3       &kp F4       &kp F5            &kp F6   &kp F7   &kp F8 &kp F9    &kp F10 &trans
   &trans     &trans       &trans       &kp F11      &kp F12      &trans            &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans  &trans
   &trans     &trans       &trans       &trans       &trans       &trans            &trans   &trans   &trans &trans    &trans  &trans
                                                &trans &trans &mo CONFIG            &mo CONFIG &trans &trans
            >;
        };
        special_layer {
            bindings = <
   &trans &kp C_BRI_DN    &kp C_BRI_UP    &kp C_AC_DESKTOP_SHOW_ALL_WINDOWS &kp C_AC_SEARCH &trans      &trans &kp C_PREV    &kp C_PP    &kp C_NEXT &kp K_MUTE &kp C_POWER
   &trans &kp SCROLLLOCK  &kp PAUSE_BREAK &kp C_VOL_DN                      &kp C_VOL_UP    &trans      &trans &kp PAGE_DOWN &kp PAGE_UP &trans     &trans     &trans
   &trans &trans          &kp PRINTSCREEN &kp HOME                          &kp END         &trans      &trans &kp DELETE    &kp INSERT  &trans     &trans     &trans
                                                                            &trans &trans   &trans      &trans &trans &trans
            >;
        };
        config_layer {
            bindings = <
   &bt BT_CLR        &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4      &trans   &trans   &trans &trans &trans &trans
   &ext_power EP_ON  &trans       &trans       &trans       &trans       &trans            &trans   &trans   &trans &trans &trans &trans
   &ext_power EP_OFF &trans       &trans       &trans       &trans       &trans            &trans   &trans   &trans &trans &trans &trans
                                                    &trans &trans &trans            &trans   &trans   &trans
            >;
        };
    };
};
